// 2. Пропишите тегу <form> правильные значения атрибутов method и адрес action для отправки формы на сервер.
const imageUploadForm = document.querySelector('#upload-select-image');

// Функция изменения метода отправки формы
const setMethod = () => imageUploadForm.method = 'get';
// Функция назначает атрибуту action адрес отправки формы
const setAction = () => imageUploadForm.action = 'https://23.javascript.pages.academy/kekstagram';

// console.log(setAction());
// console.log(imageUploadForm.action);
// 3. Проверьте разметку вашего проекта и добавьте недостающие атрибуты.
// Например, всем обязательным полям нужно добавить атрибут required.
/* Устанавливает required для всех инпутов (временно) */
const inputList = document.querySelectorAll('input');
const inputAttributes = inputList.NamedNodeMap;
const setRequiredAttr = () => inputAttrList.NamedNodeMap = 'required';
// Затем проверьте, правильные ли типы стоят у нужных полей, если нет — проставьте правильные
// const inputTypeList = document.querySelectorAll('input').NameNodeMap;
// console.log(setRequiredAttr());


// 4. Изучите, что значит загрузка изображения, и как, когда и каким образом
// показывается форма редактирования изображения. Напишите код и добавьте необходимые
// обработчики для реализации этого пункта техзадания. В работе вы можете опираться
// на код показа окна с полноразмерной фотографией, который вы, возможно, уже написали
// в предыдущей домашней работе.

// 5. После реализуйте закрытие формы.

// при закрытии формы дополнительно необходимо сбрасывать значение поля выбора файла
// #upload-file. В принципе, всё будет работать, если при повторной попытке загрузить
// в поле другую фотографию. Но! Событие change не сработает, если пользователь попробует
// загрузить ту же фотографию, а значит окно с формой не отобразится, что будет нарушением техзадания.
// Значение других полей формы также нужно сбрасывать.
const uploadFile = document.querySelector('#upload-file');
const showUploadFile = () => uploadFile.classList.remove('visually-hidden');
showUploadFile()
console.log(uploadFile);
// 6. Напишите код для валидации формы добавления изображения. Список полей для валидации:

// Хэш-теги
// Комментарий

// 7. Реализуйте логику проверки так, чтобы, как минимум, она срабатывала при попытке отправить форму
// и не давала этого сделать, если форма заполнена не по правилам. При желании, реализуйте проверки
//  сразу при вводе значения в поле.

// Как отменить обработчик Esc при фокусе?
// Задача не имеет одного верного решения, однако намекнём на самый простой — использовать stopPropagation
// для события нажатия клавиш в поле при фокусе

// Валидация хеш-тегов?
// Поля, не перечисленные в техзадании, но существующие в разметке, особой валидации не требуют.
